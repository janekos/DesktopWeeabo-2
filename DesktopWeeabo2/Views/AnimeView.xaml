<UserControl x:Class="DesktopWeeabo2.Views.AnimeView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:DesktopWeeabo2.Views"
             xmlns:enum="clr-namespace:DesktopWeeabo2.ViewModels.Shared"
             xmlns:conv="clr-namespace:DesktopWeeabo2.Helpers"
             xmlns:cc="clr-namespace:DesktopWeeabo2.CustomControls"
             x:Name="AnimeViewControl"
             mc:Ignorable="d"
             d:DesignHeight="730"
             d:DesignWidth="1004">
    <UserControl.Resources>
        <conv:CustomConverter x:Key="CustomConverter" />
        <conv:MultiValueCustomConverter x:Key="MultiValueCustomConverter" />
    </UserControl.Resources>
    <Grid Background="White">
        <cc:SelectableButton SBContent="Online"
                             HorizontalAlignment="Left"
                             VerticalAlignment="Top"
                             Width="60"
                             Height="28"
                             SBCommand="{Binding ChangeItemSource}"
                             SBCommandParameter="{x:Static enum:StatusView.ONLINE}"
                             SBCurrentView="{Binding CurrentView}"
                             SBIsSelectedParameter="isButtonSelected|Online" />
        <cc:SelectableButton SBContent="To watch"
                             HorizontalAlignment="Left"
                             Margin="60,0,0,0"
                             VerticalAlignment="Top"
                             Width="60"
                             Height="28"
                             SBCommand="{Binding ChangeItemSource}"
                             SBCommandParameter="{x:Static enum:StatusView.TOWATCH}"
                             SBCurrentView="{Binding CurrentView}"
                             SBIsSelectedParameter="isButtonSelected|Towatch" />
        <cc:SelectableButton SBContent="Viewed"
                             HorizontalAlignment="Left"
                             Margin="120,0,0,0"
                             VerticalAlignment="Top"
                             Width="60"
                             Height="28"
                             SBCommand="{Binding ChangeItemSource}"
                             SBCommandParameter="{x:Static enum:StatusView.VIEWED}"
                             SBCurrentView="{Binding CurrentView}"
                             SBIsSelectedParameter="isButtonSelected|Viewed" />
        <cc:SelectableButton SBContent="Watching"
                             HorizontalAlignment="Left"
                             Margin="180,0,0,0"
                             VerticalAlignment="Top"
                             Width="60"
                             Height="28"
                             SBCommand="{Binding ChangeItemSource}"
                             SBCommandParameter="{x:Static enum:StatusView.WATCHING}"
                             SBCurrentView="{Binding CurrentView}"
                             SBIsSelectedParameter="isButtonSelected|Watching" />
        <cc:SelectableButton SBContent="Dropped"
                             HorizontalAlignment="Left"
                             Margin="240,0,0,0"
                             VerticalAlignment="Top"
                             Width="60"
                             Height="28"
                             SBCommand="{Binding ChangeItemSource}"
                             SBCommandParameter="{x:Static enum:StatusView.DROPPED}"
                             SBCurrentView="{Binding CurrentView}"
                             SBIsSelectedParameter="isButtonSelected|Dropped" />
        <TextBox HorizontalAlignment="Left"
                 Height="28"
                 Margin="305,0,0,0"
                 TextWrapping="Wrap"
                 Text="{Binding Path=SearchText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Delay=500}"
                 VerticalAlignment="Top"
                 Width="235"
                 FontSize="18" />
        <Button Content="Advanced"
                HorizontalAlignment="Left"
                VerticalAlignment="Top"
                FontSize="16"
                Margin="543,2,0,0"
                Foreground="#FF0066CC"
                Cursor="Hand"
                Command="{Binding TriggerAdvancedWasClicked}">
            <Button.Style>
                <Style TargetType="Button">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="{TemplateBinding Background}">
                                    <TextBlock Text="{TemplateBinding Content}"
                                               Margin="4,2"
                                               TextDecorations="Underline" />
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Background"
                                    Value="Red" />
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 Value="False">
                            <Setter Property="Background"
                                    Value="{x:Null}" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>
        <TextBlock HorizontalAlignment="Right"
                   TextWrapping="Wrap"
                   Text="{Binding Path=TotalItems, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                   VerticalAlignment="Top"
                   MinWidth="10"
                   FontSize="20" />
        <Grid Margin="0,36,0,0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition MinWidth="330"
                                  Width="4*" />
                <ColumnDefinition Width="10" />
                <ColumnDefinition MinWidth="330"
                                  Width="2*" />
            </Grid.ColumnDefinitions>
            <Border Grid.Column="0"
                    BorderBrush="Black"
                    BorderThickness="1">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <ListView SelectionMode="Single"
                              ItemsSource="{Binding AnimeItems}"
                              SelectedItem="{Binding Path=SelectedItem, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                              VerticalAlignment="Stretch"
                              Height="Auto"
                              ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                              ScrollViewer.VerticalScrollBarVisibility="Auto">
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <cc:WrapPanelItem WPIImage="{Binding CoverImage}"
                                                  WPITitleRomaji="{Binding TitleRomaji}"
                                                  WPITitleEnglish="{Binding TitleEnglish}"
                                                  WPITitleNative="{Binding TitleNative}" />
                            </DataTemplate>
                        </ListView.ItemTemplate>
                        <ListView.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel />
                            </ItemsPanelTemplate>
                        </ListView.ItemsPanel>
                    </ListView>
                    <Button Grid.Row="1"
                            Content="Load more"
                            HorizontalAlignment="Stretch"
                            Visibility="{Binding APIEnumeratorHasNextPage, Converter={StaticResource CustomConverter}, ConverterParameter=isValueTrue}"
                            IsEnabled="{Binding IsContentLoading, Converter={StaticResource CustomConverter}, ConverterParameter=reverseBoolean}"
                            VerticalAlignment="Bottom"
                            FontSize="20"
                            Command="{Binding AddOnlineItemsToView}" />
                </Grid>
            </Border>
            <Border Grid.Column="0"
                    BorderBrush="Black"
                    BorderThickness="1"
                    IsHitTestVisible="False">
                <Label VerticalContentAlignment="Center"
                       HorizontalContentAlignment="Center">
                    <TextBlock FontSize="20"
                               TextWrapping="Wrap"
                               TextAlignment="Center">
                        <TextBlock.Text>
                            <MultiBinding Converter="{StaticResource MultiValueCustomConverter}"
                                          ConverterParameter="mainBoxText">
                                <Binding Path="TotalItems" />
                                <Binding Path="SearchText" />
                                <Binding Path="CurrentView" />
                                <Binding Path="IsContentLoading" />
                            </MultiBinding>
                        </TextBlock.Text></TextBlock>
                </Label>
            </Border>
            <GridSplitter Grid.Column="1"
                          HorizontalAlignment="Stretch" />
            <Border Grid.Column="2"
                    BorderBrush="Black"
                    BorderThickness="1">
                <Grid>
                    <Grid Height="30"
                          VerticalAlignment="Top"
                          HorizontalAlignment="Stretch">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*" />
                            <ColumnDefinition Width="1*" />
                            <ColumnDefinition Width="1*" />
                            <ColumnDefinition Width="1*" />
                            <ColumnDefinition Width="1*" />
                        </Grid.ColumnDefinitions>
                        <cc:SelectableButton SBContent="To watch"
                                             Grid.Column="0"
                                             BorderThickness="1,1,1,2"
                                             SBCommand="{Binding TriggerViewStatusWasChanged}"
                                             SBCommandParameter="{x:Static enum:StatusView.TOWATCH}"
                                             SBSelectedItem="{Binding SelectedItem}"
                                             SBPressedTransferButton="{Binding PressedTransferButton}"
                                             SBIsEnabledParameter="isSwitcherButtonEnabled|Towatch" />
                        <cc:SelectableButton SBContent="Viewed"
                                             Grid.Column="1"
                                             BorderThickness="1,1,1,2"
                                             SBCommand="{Binding TriggerViewStatusWasChanged}"
                                             SBCommandParameter="{x:Static enum:StatusView.VIEWED}"
                                             SBSelectedItem="{Binding SelectedItem}"
                                             SBPressedTransferButton="{Binding PressedTransferButton}"
                                             SBIsEnabledParameter="isSwitcherButtonEnabled|Viewed" />
                        <cc:SelectableButton SBContent="Watching"
                                             Grid.Column="2"
                                             BorderThickness="1,1,1,2"
                                             SBCommand="{Binding TriggerViewStatusWasChanged}"
                                             SBCommandParameter="{x:Static enum:StatusView.WATCHING}"
                                             SBSelectedItem="{Binding SelectedItem}"
                                             SBPressedTransferButton="{Binding PressedTransferButton}"
                                             SBIsEnabledParameter="isSwitcherButtonEnabled|Watching" />
                        <cc:SelectableButton SBContent="Dropped"
                                             Grid.Column="3"
                                             BorderThickness="1,1,1,2"
                                             SBCommand="{Binding TriggerViewStatusWasChanged}"
                                             SBCommandParameter="{x:Static enum:StatusView.DROPPED}"
                                             SBSelectedItem="{Binding SelectedItem}"
                                             SBPressedTransferButton="{Binding PressedTransferButton}"
                                             SBIsEnabledParameter="isSwitcherButtonEnabled|Dropped" />
                        <cc:SelectableButton SBContent="Delete"
                                             Grid.Column="4"
                                             BorderThickness="1,1,1,2"
                                             SBCommand="{Binding TriggerViewStatusWasChanged}"
                                             SBCommandParameter="{x:Static enum:StatusView.DELETE}"
                                             SBSelectedItem="{Binding SelectedItem}"
                                             SBPressedTransferButton="{Binding PressedTransferButton}"
                                             SBIsEnabledParameter="isSwitcherButtonEnabled|Delete" />
                    </Grid>
                    <ScrollViewer VerticalScrollBarVisibility="Auto"
                                  VerticalAlignment="Bottom"
                                  Margin="0,30,0,0">
                        <StackPanel DataContext="{Binding Path=SelectedItem, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                            <Image Source="{Binding CoverImage}"
                                   Margin="-3,-3,-3,3"
                                   Height="450"
                                   HorizontalAlignment="Left" />
                            <cc:InfoBoxTextBlock IBTBDynamicItem="{Binding DateAdded}"
                                                 IBTBStaticText="Date added: " />
                            <cc:InfoBoxTextBlock IBTBDynamicItem="{Binding RewatchCount}"
                                                 IBTBStaticText="Rewatch count: " />
                            <cc:InfoBoxTextBlock IBTBDynamicItem="{Binding PersonalScore}"
                                                 IBTBStaticText="Personal score: " />
                            <cc:InfoBoxTextBlock IBTBDynamicItem="{Binding WatchPriority}"
                                                 IBTBStaticText="Watch priority: " />
                            <cc:InfoBoxTextBlock IBTBDynamicItem="{Binding PersonalReview}"
                                                 IBTBStaticText="Personal review: " />
                            <cc:InfoBoxTextBlock IBTBDynamicItem="{Binding CurrentEpisode}"
                                                 IBTBStaticText="Current episode: " />
                            <cc:InfoBoxTextBlock IBTBDynamicItem="{Binding TitleEnglish}"
                                                 IBTBStaticText="English: " />
                            <cc:InfoBoxTextBlock IBTBDynamicItem="{Binding TitleRomaji}"
                                                 IBTBStaticText="Romaji: " />
                            <cc:InfoBoxTextBlock IBTBDynamicItem="{Binding TitleNative}"
                                                 IBTBStaticText="Native: " />
                            <cc:InfoBoxTextBlock IBTBDynamicItem="{Binding MeanScore}"
                                                 IBTBStaticText="Mean score: " />
                            <cc:InfoBoxTextBlock IBTBDynamicItem="{Binding Format}"
                                                 IBTBStaticText="Format: " />
                            <cc:InfoBoxTextBlock IBTBDynamicItem="{Binding Status}"
                                                 IBTBStaticText="Status: " />
                            <cc:InfoBoxTextBlock IBTBDynamicItem="{Binding Description}"
                                                 IBTBStaticText="Description: " />
                            <cc:InfoBoxTextBlock IBTBDynamicItem="{Binding Genres}"
                                                 IBTBStaticText="Genres: " />
                            <cc:InfoBoxTextBlock IBTBDynamicItem="{Binding Synonyms}"
                                                 IBTBStaticText="Synonyms: " />
                            <cc:InfoBoxTextBlock IBTBDynamicItem="{Binding Episodes}"
                                                 IBTBStaticText="Number of episodes: " />
                            <cc:InfoBoxTextBlock IBTBDynamicItem="{Binding Duration}"
                                                 IBTBStaticText="Episode duration: " />
                            <cc:InfoBoxTextBlock IBTBDynamicItem="{Binding StartDate}"
                                                 IBTBStaticText="Start date: " />
                            <cc:InfoBoxTextBlock IBTBDynamicItem="{Binding EndDate}"
                                                 IBTBStaticText="End date: " />
                        </StackPanel>
                    </ScrollViewer>
                    <cc:ChangeConfirmer CCDeleteItemCommand="{Binding DeleteItemFromDb}"
                                        CCPressedTransferButton="{Binding PressedTransferButton}"
                                        CCSaveItemCommand="{Binding SaveItemToDb}"
                                        CCSelectedItemPersonalReview="{Binding Path=SelectedItemPersonalReview, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        CCSelectedItemPersonalScore="{Binding Path=SelectedItemPersonalScore, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        CCSelectedItemTitle="{Binding Path=SelectedItemTitle, Mode=OneWay}"
                                        CCTriggerViewStatusWasChangedCommand="{Binding TriggerViewStatusWasChanged}" />
                </Grid>
            </Border>
            <Border Grid.Column="2"
                    VerticalAlignment="Stretch"
                    Background="White"
                    BorderBrush="Black"
                    BorderThickness="1"
                    Visibility="{Binding Path=SelectedItem, Converter={StaticResource CustomConverter}, ConverterParameter=isValueNull}">
                <Label VerticalContentAlignment="Center"
                       HorizontalContentAlignment="Center">
                    <TextBlock FontSize="20"
                               TextWrapping="Wrap"
                               TextAlignment="Center"
                               Text="Try clicking on an item" />
                </Label>
            </Border>
        </Grid>
        <Border VerticalAlignment="Center"
                HorizontalAlignment="Center"
                Background="White"
                BorderBrush="Black"
                BorderThickness="1"
                Visibility="{Binding Path=IsAdvancedVisible, Converter={StaticResource CustomConverter}, ConverterParameter=isValueTrue}">
            <Border.Effect>
                <DropShadowEffect ShadowDepth="5"
                                  Color="Gray" />
            </Border.Effect>
            <StackPanel Margin="10">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="110" />
                        <ColumnDefinition Width="140" />
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="ADVANCED SEARCH"
                               HorizontalAlignment="Center"
                               FontSize="20"
                               Margin="0,0,0,10"
                               Grid.Row="0"
                               Grid.ColumnSpan="2" />
                    <Label Content="Sort by"
                           Grid.Row="1"
                           Grid.Column="0" />
                    <ComboBox Grid.Column="1"
                              Grid.Row="1"
                              Height="20"
                              HorizontalAlignment="Left">
                        <ComboBoxItem Content="fir" />
                        <ComboBoxItem Content="sec" />
                        <ComboBoxItem Content="thi" />
                    </ComboBox>
                    <Label Content="descending"
                           Grid.Row="2"
                           Grid.Column="0" />
                    <CheckBox Grid.Column="1"
                              Grid.Row="2"
                              HorizontalAlignment="Left"
                              Margin="0,5,0,0" />
                    <Label Content="Is adult"
                           Grid.Row="3"
                           Grid.Column="0" />
                    <CheckBox Grid.Column="1"
                              Grid.Row="3"
                              HorizontalAlignment="Left"
                              Margin="0,5,0,0" />
                    <Label Content="Selected genres"
                           Grid.Row="4"
                           VerticalAlignment="Center"
                           Grid.Column="0" />
                    <TextBlock Text="{Binding testval, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                               Grid.Row="4"
                               Grid.Column="1"
                               Margin="0,0,0,10"
                               TextWrapping="Wrap"
                               VerticalAlignment="Center" />
                    <Label Content="Select genres"
                           Grid.Row="5"
                           VerticalAlignment="Center"
                           Grid.Column="0" />
                    <ListBox ItemsSource="{Binding testsrc}"
                             Grid.Row="5"
                             Height="100"
                             Grid.Column="1"
                             IsTextSearchEnabled="True"
                             ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <CheckBox IsChecked="{Binding IsChecked, Mode=TwoWay}"
                                          Content="{Binding Name}"
                                          Command="{Binding ElementName=AnimeViewControl, Path=DataContext.SetChecked}"
                                          CommandParameter="{Binding Id}" />
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                        <ListBox.ItemContainerStyle>
                            <Style TargetType="{x:Type ListBoxItem}">
                                <Setter Property="Focusable"
                                        Value="False" />
                            </Style>
                        </ListBox.ItemContainerStyle>
                    </ListBox>
                </Grid>
            </StackPanel>
        </Border>
    </Grid>
</UserControl>
